#include <iostream>
#include <cstdlib>
#include <queue>
#include <vector>
#include <unordered_map>
#include <map>
#include <stack>
#include <set>
#include <algorithm>
#include <array>
#include <climits>
#include <cstring>
using namespace std;
const int N = 50005;

int s[N];
int vis[N];
vector<array<int, 2>>e[N];

int main() {
	int n;
	while (cin >> n) {
		int st = INT_MAX;
		int ed = INT_MIN;
		memset(s, 0xc0, sizeof(s));
		memset(vis, 0, sizeof(vis));
		for (int i = 1; i <= n; i++) {
			int a, b, c;
			cin >> a >> b >> c;
			e[a].push_back({b + 1,c});
			st = min(st, a);
			ed = max(ed, b + 1);
		}
		s[st] = 0;
		for (int i = st - 1; i + 1 <= ed; i++) {
			e[i].push_back({i + 1,0});
			e[i + 1].push_back({i , -1});
		}
		
		queue<int>qe;
		qe.push(st);
		vis[st] = 1;
		while (!qe.empty()) {
			int u = qe.front(); qe.pop();
			vis[u] = 0;
			for (auto& vv : e[u]) {
				if (s[vv[0]] < s[u] + vv[1]) {
					s[vv[0]] = s[u] + vv[1];
					if (vis[vv[0]])continue;
					vis[vv[0]] = 1;
					qe.push(vv[0]);
				}
			}
		}
		cout << s[ed] << endl;
		for (int i = st; i <= ed; i++) {
			e[i].clear();
		}
	}
}