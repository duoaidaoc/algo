#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <iomanip>
#include <cstdlib>
#include <cstring>
#include <queue>
#include <vector>
#include <unordered_map>
#include <map>
#include <stack>
#include <set>
#include <algorithm>
#include <array>
//#include <bits/stdc++.h>
#define ll long long
using namespace std;
int n,m;
const int N = 2020;
vector<int>e[N];
int val[N];
int dp[N][N];
int sz[N];
const int inf = 1 << 29;

void dfs(int u) {
	sz[u] = 0;
	for (auto v : e[u]) {
		dfs(v);
		int tmp[N];
		for (int i = 0; i <= sz[u] + sz[v]; i++) {
			tmp[i] = -inf;
		}
		for (int i = 0; i <= sz[u]; i++) {
			for (int j = 0; j <= sz[v]; j++) {
				tmp[i + j] = max(dp[u][i] + dp[v][j], tmp[i + j]);
			}
		}
		for (int i = 0; i <= sz[u] + sz[v]; i++) {
			dp[u][i] = tmp[i];
		}
		sz[u] += sz[v];
	}
	sz[u] += 1;
	for (int i = sz[u]; i >= 1; i--) {
		dp[u][i] = dp[u][i - 1] + val[u];
	}
	dp[u][0] = 0;
}

int main() {
	cin >> n >> m;
	for (int i = 2; i <= n; i++) {
		int x;
		cin >> x;
		e[x].push_back(i);
	}
	for (int i = 1; i <= n; i++) {
		cin >> val[i];
	}
	dfs(1);
	for (int i = 1; i <= m; i++) {
		int x, y;
		cin >> x >> y;
		cout << dp[x][y] << '\n';
	}
}