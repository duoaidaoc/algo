#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstdlib>
#include <queue>
#include <vector>
#include <unordered_map>
#include <map>
#include <stack>
#include <set>
#include <algorithm>
using namespace std;
//const int N = 50005;
const int M = 60;
#define ll long long
int n, t;
vector<int>a;
const int N = 250;
int dp[N][N];

int main() {
	cin >> n;
	a.push_back(0);
	for (int i = 1; i <= n; i++) {
		int x;
		cin >> x;
		a.push_back(x);
	}
	for (int i = 1; i <= n; i++) {
		a.push_back(a[i]);
	}
	int len = a.size();
	for (int l = 1; l + 2 <= 2 * n; l++) {
		dp[l][l + 2] = a[l] * a[l + 1] * a[l + 2];
	}
	for (int l = 4; l <= 2 * n; l++) {
		for (int st = 1; st + l - 1 <= 2 * n; st++) {
			int ed = st + l - 1;
			dp[st][ed] = max(dp[st][ed], dp[st + 1][ed] + a[st] * a[st + 1] * a[ed]);
			dp[st][ed] = max(dp[st][ed], dp[st][ed - 1] + a[st] * a[ed - 1] * a[ed]);
			for (int i = st + 2; i <= ed - 2; i++) {
				dp[st][ed] = max(dp[st][ed], dp[st][i] + dp[i][ed] + a[st] * a[i] * a[ed]);
			}
		}
	}
	int maxt = 0;
	for (int i = 1; i <= n; i++) {
		maxt = max(maxt, dp[i][i + n]);
	}
	cout << maxt << endl;
}